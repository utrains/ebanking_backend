<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.sid.ebankingbackend.EbankingBackendApplicationTests" time="7.522" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/test-classes:/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/classes:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/home/hermann90/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/home/hermann90/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/home/hermann90/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/home/hermann90/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hermann90/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hermann90/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/home/hermann90/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/hermann90/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/hermann90/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/hermann90/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/home/hermann90/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/hermann90/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/hermann90/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/hermann90/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/hermann90/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hermann90/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hermann90/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/hermann90/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/home/hermann90/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hermann90/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/home/hermann90/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot/3.1.1/spring-boot-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/home/hermann90/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/home/hermann90/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/home/hermann90/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/hermann90/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/hermann90/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/home/hermann90/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/home/hermann90/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/home/hermann90/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/home/hermann90/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/home/hermann90/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/home/hermann90/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/home/hermann90/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/home/hermann90/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/home/hermann90/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.1.0/springdoc-openapi-starter-common-2.1.0.jar:/home/hermann90/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.9/swagger-core-jakarta-2.2.9.jar:/home/hermann90/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/hermann90/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.9/swagger-annotations-jakarta-2.2.9.jar:/home/hermann90/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.9/swagger-models-jakarta-2.2.9.jar:/home/hermann90/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.2/jackson-dataformat-yaml-2.15.2.jar:/home/hermann90/.m2/repository/org/webjars/swagger-ui/4.18.2/swagger-ui-4.18.2.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-oauth2-resource-server/3.1.1/spring-boot-starter-oauth2-resource-server-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-config/6.1.1/spring-security-config-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-core/6.1.1/spring-security-core-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-crypto/6.1.1/spring-security-crypto-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-oauth2-resource-server/6.1.1/spring-security-oauth2-resource-server-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-oauth2-core/6.1.1/spring-security-oauth2-core-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-web/6.1.1/spring-security-web-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-oauth2-jose/6.1.1/spring-security-oauth2-jose-6.1.1.jar:/home/hermann90/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.31/nimbus-jose-jwt-9.31.jar:/home/hermann90/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/home/hermann90/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/home/hermann90/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/home/hermann90/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/hermann90/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/hermann90/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/hermann90/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/home/hermann90/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/home/hermann90/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/hermann90/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/hermann90/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/hermann90/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/hermann90/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/hermann90/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/hermann90/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/hermann90/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/home/hermann90/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/home/hermann90/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hermann90/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/home/hermann90/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/hermann90/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hermann90/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/home/hermann90/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/surefire/surefirebooter-20230821220502936_3.jar /home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/surefire 2023-08-21T22-05-02_881-jvmRun1 surefire-20230821220502936_1tmp surefire_0-20230821220502936_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/test-classes:/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/classes:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/home/hermann90/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/home/hermann90/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/home/hermann90/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/home/hermann90/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hermann90/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hermann90/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/home/hermann90/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/hermann90/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/hermann90/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/hermann90/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/home/hermann90/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/hermann90/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/hermann90/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/hermann90/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/hermann90/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hermann90/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hermann90/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/hermann90/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/home/hermann90/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hermann90/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/home/hermann90/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot/3.1.1/spring-boot-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/home/hermann90/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/home/hermann90/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/home/hermann90/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/hermann90/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/hermann90/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/home/hermann90/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/home/hermann90/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/home/hermann90/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/home/hermann90/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/home/hermann90/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/home/hermann90/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/home/hermann90/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/home/hermann90/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/home/hermann90/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/home/hermann90/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.1.0/springdoc-openapi-starter-common-2.1.0.jar:/home/hermann90/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.9/swagger-core-jakarta-2.2.9.jar:/home/hermann90/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/hermann90/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.9/swagger-annotations-jakarta-2.2.9.jar:/home/hermann90/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.9/swagger-models-jakarta-2.2.9.jar:/home/hermann90/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/hermann90/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.2/jackson-dataformat-yaml-2.15.2.jar:/home/hermann90/.m2/repository/org/webjars/swagger-ui/4.18.2/swagger-ui-4.18.2.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-oauth2-resource-server/3.1.1/spring-boot-starter-oauth2-resource-server-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-config/6.1.1/spring-security-config-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-core/6.1.1/spring-security-core-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-crypto/6.1.1/spring-security-crypto-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-oauth2-resource-server/6.1.1/spring-security-oauth2-resource-server-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-oauth2-core/6.1.1/spring-security-oauth2-core-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-web/6.1.1/spring-security-web-6.1.1.jar:/home/hermann90/.m2/repository/org/springframework/security/spring-security-oauth2-jose/6.1.1/spring-security-oauth2-jose-6.1.1.jar:/home/hermann90/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.31/nimbus-jose-jwt-9.31.jar:/home/hermann90/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/home/hermann90/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/home/hermann90/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/home/hermann90/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/home/hermann90/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/hermann90/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/hermann90/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/hermann90/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/home/hermann90/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/home/hermann90/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/hermann90/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/hermann90/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/hermann90/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/hermann90/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/hermann90/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/home/hermann90/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/hermann90/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/hermann90/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/home/hermann90/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/home/hermann90/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hermann90/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/home/hermann90/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/hermann90/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hermann90/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/home/hermann90/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/home/hermann90/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/hermann90"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-07-18"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend/target/surefire/surefirebooter-20230821220502936_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.8+7-Ubuntu-122.04"/>
    <property name="user.name" value="hermann90"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.2.0-26-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/hermann90/.m2/repository"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.8"/>
    <property name="user.dir" value="/home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="37728"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="17.0.8+7-Ubuntu-122.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="contextLoads" classname="org.sid.ebankingbackend.EbankingBackendApplicationTests" time="0.38">
    <system-out><![CDATA[22:05:03.531 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [org.sid.ebankingbackend.EbankingBackendApplicationTests]: EbankingBackendApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
22:05:03.617 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration org.sid.ebankingbackend.EbankingBackendApplication for test class org.sid.ebankingbackend.EbankingBackendApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.1)

2023-08-21T22:05:03.938+02:00  INFO 37728 --- [           main] o.s.e.EbankingBackendApplicationTests    : Starting EbankingBackendApplicationTests using Java 17.0.8 with PID 37728 (started by hermann90 in /home/hermann90/utrains/project/devops/DevOps_CI_2023/digital-banking-spring-backend)
2023-08-21T22:05:03.940+02:00  INFO 37728 --- [           main] o.s.e.EbankingBackendApplicationTests    : No active profile set, falling back to 1 default profile: "default"
2023-08-21T22:05:04.550+02:00  INFO 37728 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-21T22:05:04.607+02:00  INFO 37728 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 51 ms. Found 3 JPA repository interfaces.
2023-08-21T22:05:05.048+02:00  INFO 37728 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-21T22:05:05.076+02:00  INFO 37728 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-08-21T22:05:05.078+02:00  INFO 37728 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-08-21T22:05:05.159+02:00  INFO 37728 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-21T22:05:05.231+02:00  INFO 37728 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-08-21T22:05:05.241+02:00  INFO 37728 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-21T22:05:05.500+02:00  INFO 37728 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13e1e816
2023-08-21T22:05:05.502+02:00  INFO 37728 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-21T22:05:05.536+02:00  WARN 37728 --- [           main] org.hibernate.dialect.Dialect            : HHH000511: The 8.0.0 version for [org.hibernate.dialect.MariaDBDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 10.3.0. Check the community dialects project for available legacy versions.
2023-08-21T22:05:05.697+02:00  INFO 37728 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-21T22:05:06.167+02:00  INFO 37728 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table account_operation drop foreign key if exists FKmimm8esca3p6ux3s6bdwvu1cn
2023-08-21T22:05:06.186+02:00  WARN 37728 --- [           main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "alter table account_operation drop foreign key if exists FKmimm8esca3p6ux3s6bdwvu1cn" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if exists FKmimm8esca3p6ux3s6bdwvu1cn' at line 1]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table account_operation drop foreign key if exists FKmimm8esca3p6ux3s6bdwvu1cn" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if exists FKmimm8esca3p6ux3s6bdwvu1cn' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-6.0.10.jar:6.0.10]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931) ~[spring-context-6.0.10.jar:6.0.10]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.10.jar:6.0.10]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.0.10.jar:6.0.10]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.0.10.jar:6.0.10]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-6.0.10.jar:6.0.10]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310) ~[na:na]
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[na:na]
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) ~[surefire-booter-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) ~[surefire-booter-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) ~[surefire-booter-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) ~[surefire-booter-3.0.0.jar:3.0.0]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if exists FKmimm8esca3p6ux3s6bdwvu1cn' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.0.1.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	... 118 common frames omitted

Hibernate: alter table bank_account drop foreign key if exists FKj818ht4ban0c4uw4bmsbf3jme
2023-08-21T22:05:06.194+02:00  WARN 37728 --- [           main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "alter table bank_account drop foreign key if exists FKj818ht4ban0c4uw4bmsbf3jme" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if exists FKj818ht4ban0c4uw4bmsbf3jme' at line 1]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table bank_account drop foreign key if exists FKj818ht4ban0c4uw4bmsbf3jme" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if exists FKj818ht4ban0c4uw4bmsbf3jme' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[spring-orm-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.10.jar:6.0.10]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-6.0.10.jar:6.0.10]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931) ~[spring-context-6.0.10.jar:6.0.10]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.10.jar:6.0.10]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.0.10.jar:6.0.10]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.0.10.jar:6.0.10]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406) ~[spring-boot-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108) ~[spring-boot-test-3.1.1.jar:3.1.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241) ~[spring-test-6.0.10.jar:6.0.10]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-6.0.10.jar:6.0.10]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310) ~[na:na]
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[na:na]
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) ~[junit-platform-launcher-1.9.3.jar:1.9.3]
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) ~[surefire-junit-platform-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) ~[surefire-booter-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) ~[surefire-booter-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) ~[surefire-booter-3.0.0.jar:3.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) ~[surefire-booter-3.0.0.jar:3.0.0]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if exists FKj818ht4ban0c4uw4bmsbf3jme' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.0.1.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78) ~[hibernate-core-6.2.5.Final.jar:6.2.5.Final]
	... 118 common frames omitted

Hibernate: drop table if exists account_operation
Hibernate: drop table if exists bank_account
Hibernate: drop table if exists customer
Hibernate: create table account_operation (amount float(53) not null, id bigint not null auto_increment, operation_date datetime(6), bank_account_id varchar(255), description varchar(255), type enum ('CREDIT','DEBIT'), primary key (id)) engine=InnoDB
Hibernate: create table bank_account (balance float(53) not null, interest_rate float(53), over_draft float(53), type varchar(4) not null, created_at datetime(6), customer_id bigint, id varchar(255) not null, status enum ('ACTIVATED','CREATED','SUSPENDED'), primary key (id)) engine=InnoDB
Hibernate: create table customer (id bigint not null auto_increment, email varchar(255), name varchar(255), primary key (id)) engine=InnoDB
Hibernate: alter table account_operation add constraint FKmimm8esca3p6ux3s6bdwvu1cn foreign key (bank_account_id) references bank_account (id)
Hibernate: alter table bank_account add constraint FKj818ht4ban0c4uw4bmsbf3jme foreign key (customer_id) references customer (id)
2023-08-21T22:05:06.635+02:00  INFO 37728 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-21T22:05:07.057+02:00  INFO 37728 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2023-08-21T22:05:07.468+02:00  WARN 37728 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-21T22:05:07.759+02:00  INFO 37728 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4a592d22, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20072ff1, org.springframework.security.web.context.SecurityContextHolderFilter@f41db7f, org.springframework.security.web.header.HeaderWriterFilter@24c4370a, org.springframework.web.filter.CorsFilter@6e48b9ed, org.springframework.security.web.authentication.logout.LogoutFilter@7593716d, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@5d96b0f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7785430c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13056efe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38ed9fb2, org.springframework.security.web.session.SessionManagementFilter@72161dbb, org.springframework.security.web.access.ExceptionTranslationFilter@1b12c870, org.springframework.security.web.access.intercept.AuthorizationFilter@301608d]
2023-08-21T22:05:08.061+02:00  INFO 37728 --- [           main] o.s.e.EbankingBackendApplicationTests    : Started EbankingBackendApplicationTests in 4.332 seconds (process running for 5.08)
2023-08-21T22:05:08.068+02:00  INFO 37728 --- [           main] o.s.e.services.BankAccountServiceImpl    : Saving new Customer
Hibernate: insert into customer (email,name) values (?,?)
2023-08-21T22:05:08.113+02:00  INFO 37728 --- [           main] o.s.e.services.BankAccountServiceImpl    : Saving new Customer
Hibernate: insert into customer (email,name) values (?,?)
2023-08-21T22:05:08.121+02:00  INFO 37728 --- [           main] o.s.e.services.BankAccountServiceImpl    : Saving new Customer
Hibernate: insert into customer (email,name) values (?,?)
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select c1_0.id,c1_0.balance,c1_0.created_at,c2_0.id,c2_0.email,c2_0.name,c1_0.status,c1_0.over_draft from bank_account c1_0 left join customer c2_0 on c2_0.id=c1_0.customer_id where c1_0.type='CA' and c1_0.id=?
Hibernate: insert into bank_account (balance,created_at,customer_id,status,over_draft,type,id) values (?,?,?,?,?,'CA',?)
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select s1_0.id,s1_0.balance,s1_0.created_at,c1_0.id,c1_0.email,c1_0.name,s1_0.status,s1_0.interest_rate from bank_account s1_0 left join customer c1_0 on c1_0.id=s1_0.customer_id where s1_0.type='SA' and s1_0.id=?
Hibernate: insert into bank_account (balance,created_at,customer_id,status,interest_rate,type,id) values (?,?,?,?,?,'SA',?)
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select c1_0.id,c1_0.balance,c1_0.created_at,c2_0.id,c2_0.email,c2_0.name,c1_0.status,c1_0.over_draft from bank_account c1_0 left join customer c2_0 on c2_0.id=c1_0.customer_id where c1_0.type='CA' and c1_0.id=?
Hibernate: insert into bank_account (balance,created_at,customer_id,status,over_draft,type,id) values (?,?,?,?,?,'CA',?)
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select s1_0.id,s1_0.balance,s1_0.created_at,c1_0.id,c1_0.email,c1_0.name,s1_0.status,s1_0.interest_rate from bank_account s1_0 left join customer c1_0 on c1_0.id=s1_0.customer_id where s1_0.type='SA' and s1_0.id=?
Hibernate: insert into bank_account (balance,created_at,customer_id,status,interest_rate,type,id) values (?,?,?,?,?,'SA',?)
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select c1_0.id,c1_0.balance,c1_0.created_at,c2_0.id,c2_0.email,c2_0.name,c1_0.status,c1_0.over_draft from bank_account c1_0 left join customer c2_0 on c2_0.id=c1_0.customer_id where c1_0.type='CA' and c1_0.id=?
Hibernate: insert into bank_account (balance,created_at,customer_id,status,over_draft,type,id) values (?,?,?,?,?,'CA',?)
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select s1_0.id,s1_0.balance,s1_0.created_at,c1_0.id,c1_0.email,c1_0.name,s1_0.status,s1_0.interest_rate from bank_account s1_0 left join customer c1_0 on c1_0.id=s1_0.customer_id where s1_0.type='SA' and s1_0.id=?
Hibernate: insert into bank_account (balance,created_at,customer_id,status,interest_rate,type,id) values (?,?,?,?,?,'SA',?)
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,b1_0.customer_id,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select c1_0.id,c1_0.email,c1_0.name from customer c1_0 where c1_0.id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,interest_rate=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
Hibernate: select b1_0.id,b1_0.type,b1_0.balance,b1_0.created_at,c1_0.id,c1_0.email,c1_0.name,b1_0.status,b1_0.over_draft,b1_0.interest_rate from bank_account b1_0 left join customer c1_0 on c1_0.id=b1_0.customer_id where b1_0.id=?
Hibernate: insert into account_operation (amount,bank_account_id,description,operation_date,type) values (?,?,?,?,?)
Hibernate: update bank_account set balance=?,created_at=?,customer_id=?,status=?,over_draft=? where id=?
]]></system-out>
  </testcase>
</testsuite>